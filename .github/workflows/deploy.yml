name: Deploy Frontend and Backend

on:
  push:
    branches:
      - main # This workflow runs when code is pushed to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Use a fresh virtual machine provided by GitHub for the job

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to clone your repository to the runner

    - name: Set up SSH Agent
      # This action securely adds your SSH private key to the SSH agent on the runner
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # Retrieves the private key from GitHub Secrets

    - name: Add Server to Known Hosts
      # Prevents SSH from asking "Are you sure you want to continue connecting?"
      run: |
        mkdir -p ~/.ssh
        # IMPORTANT: Replace 144.24.104.158 with your actual server IP or domain name
        ssh-keyscan 144.24.104.158 >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Deploy to Server via SSH
      # SSH into your server and execute deployment commands
      # IMPORTANT: Replace 'ubuntu@144.24.104.158' with your actual SSH user and server IP/domain
      # Ensure your 'ubuntu' user (or whatever user you SSH in as) has permissions for these operations
      run: |
        echo "Starting deployment..."
        echo "Deploying Next.js frontend..."
        ssh ubuntu@144.24.104.158 "
          cd /var/www/projects/new-ui && \
          git pull origin main && \
          npm install --legacy-peer-deps && \
          npm run build && \
          pm2 restart nextjs-app
        "
        echo "Deploying Flask backend..."
        ssh ubuntu@144.24.104.158 "
          cd /var/www/projects/backend_api && \
          git pull origin main && \
          source venv/bin/activate && \
          pip install -r requirements.txt && \
          sudo systemctl restart backend_api
        "
        echo "Restarting Nginx..."
        ssh ubuntu@144.24.104.158 "sudo systemctl restart nginx"
        echo "Deployment complete."
